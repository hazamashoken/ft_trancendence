name: Docker Image CI
on:
  pull_request:
    branches:
      - dev
      - main

jobs:
  # build-backend:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout the repo
  #       uses: actions/checkout@v2
  #     - name: echo "Build a backend container image"
  #       run: docker compose -f docker-compose.yml build backend
  # build-database:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout the repo
  #       uses: actions/checkout@v2
  #     - name: echo "Build a backend container image"
  #       run: docker compose -f docker-compose.yml build database
  #   env:
  #     DB_NAME: ft_trancendence
  #     DB_USERNAME: githubaction
  #     DB_PASSWORD: 424242
  # build-frontend:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout the repo
  #       uses: actions/checkout@v2
  #     - name: echo "Build a frontend container image"
  #       run: docker compose -f docker-compose.yml build frontend

  e2e-test-backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    env:
      DB_NAME: ft_trancendence
      DB_USERNAME: githubaction
      DB_PASSWORD: 424242
      DB_PORT: 5432
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: build backend
        run: make run-database
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - name: create .env file
        run: |
          touch .env
          echo "DB_HOST=localhost" >> .env
          echo "DB_PORT=$DB_PORT" >> .env
          echo "DB_USERNAME=$DB_USERNAME" >> .env
          echo "DB_PASSWORD=$DB_PASSWORD" >> .env
          echo "DB_NAME=$DB_NAME" >> .env
          cp .env ./backend/app/
      - name: install dependencies
        run: npm install
        working-directory: ./backend/app
      - name: run e2e test
        working-directory: ./backend/app
        run: npx jest --config ./test/jest-e2e.json --coverage --passWithNoTests
    # needs: [build-backend, build-database]