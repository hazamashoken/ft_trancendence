version: "3.8"

services:
  frontend:
    build:
      context: frontend
      target: development
      dockerfile: Dockerfile
    command: npm run dev
    volumes:
      - ./frontend/app:/app
      - ./frontend/app/node_modules:/app/node_modules
      - ./frontend/app/.env.local:/app/.env.local
    restart: unless-stopped
    ports:
      - 8080:8080
    networks:
      - main

  # https://blog.logrocket.com/containerized-development-nestjs-docker/
  backend:
    container_name: nestjs
    build:
      context: backend
      target: development
      dockerfile: Dockerfile
    command: npm run start:debug
    ports:
      - 3000:3000
      - 9229:9229
    networks:
      - main
    volumes:
      - .env:/usr/src/app/.env
      - ./backend/data:/app/data
      # - .backend/data:/app/node_modules
    restart: unless-stopped
    depends_on:
      - database

  database:
    container_name: postgres
    build:
      context: database
      dockerfile: Dockerfile
      args:
        - DB_NAME=${DB_NAME}
        - DB_USERNAME=${DB_USERNAME}
        - DB_PASSWORD=${DB_PASSWORD}
    environment:
      - POSTGRES_PASSWORD
    ports:
      - "5432:5432"
    networks:
      - main
    volumes:
      - ./database/data:/var/lib/postgresql/data
    restart: always

networks:
  main:
